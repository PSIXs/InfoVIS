{"version":3,"sources":["components/listItems.js","components/Title.js","components/LineChart.js","components/Dashboard.js","theme.js","index.js","App.js","utils/DataAnalyzer/index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","dataDaily","datasets","dataHour","LineChart","classes","React","useState","sensor","setSensor","day","setDay","DataAnalyzer","countByMonthMC2","countByHourMC2","Fragment","Grid","container","item","xs","FormControl","className","InputLabel","id","Select","labelId","value","onChange","event","target","keys","map","MenuItem","FormHelperText","Card","data","options","scales","xAxes","type","time","displayFormats","tooltipFormat","unit","plugins","colorschemes","scheme","Aspect6","onClick","e","undefined","index","_index","point","x","format","hour","GreenYellow6","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","open","setOpen","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","List","Container","maxWidth","createMuiTheme","palette","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","document","querySelector","generalMC2","require","moment","i","length","message","module","exports","countMap","Map","stats","element","dateEntry","obj","has","set","dataMap","get","push","Number","statEntry","label","date","average","records","y","console","log","fullDate","hourEntry","hourMap","sensorMap","toFixed"],"mappings":"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","file":"static/js/main.eafa9432.chunk.js","sourcesContent":["\nimport React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Visualizations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Anchoas</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Report\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"About\" />\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport Title from \"./Title\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport DataAnalyzer from \"../utils/DataAnalyzer\";\nimport \"chartjs-plugin-colorschemes/src/plugins/plugin.colorschemes\";\nimport { Aspect6, GreenYellow6 } from \"chartjs-plugin-colorschemes/src/colorschemes/colorschemes.office\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport keys from \"../utils/DataAnalyzer/keys.json\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst dataDaily = {\n  datasets: []\n};\n\nconst dataHour = {\n  datasets: []\n};\n\nexport default function LineChart() {\n  const classes = useStyles();\n  const [sensor, setSensor] = React.useState(\"\");\n  const [day, setDay] = React.useState(\"\");\n  const handleChange = event => {\n    setSensor(event.target.value);\n  };\n  dataDaily.datasets = DataAnalyzer.countByMonthMC2(sensor);\n  dataHour.datasets = DataAnalyzer.countByHourMC2(sensor, day);\n  return (\n    <React.Fragment>\n      <Grid container>\n        <Grid item xs={12}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-helper-label\">Sensor</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-helper-label\"\n              id=\"demo-simple-select-helper\"\n              value={sensor}\n              onChange={handleChange}\n            >\n              {keys.map(sensor => (\n                <MenuItem value={sensor}>{sensor}</MenuItem>\n              ))}\n            </Select>\n            <FormHelperText>Select sensor data</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={10}>\n          <Title>Daily Averages</Title>\n          <Card>\n            <Line\n              data={dataDaily}\n              options={{\n                scales: {\n                  xAxes: [\n                    {\n                      type: \"time\",\n                      time: {\n                        displayFormats: { day: \"YYYY-MM-DD\" },\n                        tooltipFormat: \"YYYY-MM-DD\",\n                        unit: \"day\"\n                      }\n                    }\n                  ]\n                },\n                plugins: {\n                  colorschemes: {\n                    scheme: Aspect6\n                  }\n                },\n                onClick: (e, item) => {\n                  if (item === undefined || item[\"0\"] === undefined) return;\n                  const index = item[\"0\"]._index;\n                  const point = dataDaily.datasets[0].data[index];\n                  setDay(point.x.format('YYYY-MM-DD'));\n                }\n              }}\n            />\n          </Card>\n          <Title>Hour average for day</Title>\n          <Card>\n            <Bar\n              data={dataHour}\n              options={{\n                scales: {\n                  xAxes: [\n                    {\n                      type: \"time\",\n                      time: {\n                        displayFormats: { hour: \"Ha\" },\n                        tooltipFormat: \"Ha\",\n                        unit: \"hour\"\n                      }\n                    }\n                  ]\n                },\n                plugins: {\n                  colorschemes: {\n                    scheme: GreenYellow6\n                  }\n                }\n              }}\n            />\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport LineChart from './LineChart';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            InfoVis Term Project\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12}>\n              <LineChart />\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nexport default function App() {\n  return (\n    <Dashboard></Dashboard>\n  );\n}\n","const generalMC2 = require('../../data/mc2/general-MC2.json');\nconst moment = require('moment');\n\nfor (let i = 0; i < generalMC2.length; i += 1) {\n  generalMC2[i] = generalMC2[i].message;\n  delete generalMC2[i].type;\n};\n\nconst countByMonthMC2 = (sensor) => {\n  const countMap = new Map();\n  const stats = [];\n  for (let i = 0; i < generalMC2.length; i += 1) {\n    const element = generalMC2[i];\n    const dateEntry = moment(element['Date/Time']).format('YYYY-MM-DD');\n    for (let obj in element) {\n      if (obj === 'Date/Time') continue;\n      if (!countMap.has(obj)) {\n        countMap.set(obj, new Map);\n      }\n      const dataMap = countMap.get(obj);\n      if (dataMap.has(dateEntry)) {\n        dataMap.get(dateEntry).push(Number(element[obj]));\n      } else {\n        dataMap.set(dateEntry, [Number(element[obj])]);\n      }\n      countMap.set(obj, dataMap);\n    }\n  }\n  const statEntry = {\n    label: sensor,\n    data: [],\n  };\n  const dataMap = countMap.get(sensor);\n  if (dataMap === undefined) return stats;\n  for (let date of dataMap.keys()) {\n    let average = 0.0;\n    const records = dataMap.get(date);\n    for (let value of records) {\n      average += value;\n    }\n    average /= records.length;\n    statEntry.data.push({\n      x: moment(date),\n      y: average,\n    })\n  }\n  stats.push(statEntry);\n  console.log(stats);\n  return stats;\n}\n\nconst countByHourMC2 = (sensor, day) => {\n  const countMap = new Map();\n  const stats = [];\n  for (let i = 0; i < generalMC2.length; i += 1) {\n    const element = generalMC2[i];\n    const fullDate = moment(element['Date/Time']);\n    const dateEntry = fullDate.format('YYYY-MM-DD');\n    const hourEntry = fullDate.format('YYYY-MM-DD HH');\n    for (let obj in element) {\n      if (obj === 'Date/Time') continue;\n      if (!countMap.has(obj)) {\n        countMap.set(obj, new Map);\n      }\n      const dataMap = countMap.get(obj);\n      if (!dataMap.has(dateEntry)) {\n        dataMap.set(dateEntry, new Map());\n      }\n      const hourMap = dataMap.get(dateEntry);\n      if (!hourMap.has(hourEntry)) {\n        hourMap.set(hourEntry, []);\n      }\n      hourMap.get(hourEntry).push(Number(element[obj]));\n      dataMap.set(dateEntry, hourMap);\n      countMap.set(obj, dataMap);\n    }\n  }\n  const sensorMap = countMap.get(sensor);\n  const statEntry = {\n    label: day,\n    data: [],\n  };\n  if (sensorMap === undefined) return stats;\n  const dataMap = sensorMap.get(day);\n  if (dataMap === undefined) return stats; \n  if (dataMap === undefined || dataMap === null) {\n    return stats;\n  }\n  for (let date of dataMap.keys()) {\n    let average = 0.0;\n    const records = dataMap.get(date);\n    for (let value of records) {\n      average += value;\n    }\n    average /= records.length;\n    statEntry.data.push({\n      x: moment(date),\n      y: average.toFixed(2),\n    })\n  }\n  stats.push(statEntry);\n  console.log(stats);\n  return stats;\n}\n\nmodule.exports.countByMonthMC2 = countByMonthMC2;\nmodule.exports.countByHourMC2 = countByHourMC2;"],"sourceRoot":""}